# #480「assertNever関数」

四国めたん「assertNever関数について学びましょう！」
ずんだもん「assertNeverってどんな関数？」
四国めたん「網羅性チェックに使う関数です。到達不可能なコードを検出しますね」
ずんだもん「どう使うの？」
四国めたん「switch文の default で使います。すべてのケースを処理したことを保証しますね」
ずんだもん「なるほど！漏れを防ぐんだね！」
四国めたん「型パラメータが never でない場合、型エラーになります。TypeScript v5.9でも重要なパターンですね」
ずんだもん「型安全性が高まるんだね！」

---

## 📺 画面表示用コード

```typescript
// assertNever関数の定義
function assertNever(value: never): never {
  throw new Error(`Unexpected value: ${value}`);
}
```

```typescript
// 網羅性チェック
type Status = "pending" | "success" | "error";
function handleStatus(status: Status): void {
  switch (status) {
    case "pending":
      console.log("Pending");
      break;
    case "success":
      console.log("Success");
      break;
    case "error":
      console.log("Error");
      break;
    default:
      assertNever(status);  // すべてカバー
  }
}
```

```typescript
// 型追加時のエラー検出
type Color = "red" | "blue" | "green";
function getColor(color: Color): string {
  switch (color) {
    case "red": return "#ff0000";
    case "blue": return "#0000ff";
    default: return assertNever(color);  // greenが未処理で型エラー
  }
}
```
