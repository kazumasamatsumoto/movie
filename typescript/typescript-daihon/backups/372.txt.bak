# #372「使用場面」

四国めたん「void型の使用場面について学びましょう！」
ずんだもん「どんな時にvoid型を使うの？」
四国めたん「副作用のための関数、イベントハンドラ、コールバック関数などで使います」
ずんだもん「具体的にどんな関数？」
四国めたん「ログ出力、DOM操作、状態更新など、戻り値が重要でない処理ですね」
ずんだもん「なるほど！処理だけが目的の関数なんだね！」
四国めたん「Promise<void>も頻繁に使われます。非同期処理の完了だけを表現しますね」
ずんだもん「いろんな場面で使われるんだね！」

---

## 📺 画面表示用コード

```typescript
// ログ出力
function log(message: string): void {
  console.log(`[LOG] ${message}`);
}
```

```typescript
// イベントハンドラ
button.addEventListener("click", (): void => {
  console.log("Clicked");
});
```

```typescript
// 非同期処理
async function saveData(data: Data): Promise<void> {
  await database.save(data);
  console.log("Saved");
}
```
