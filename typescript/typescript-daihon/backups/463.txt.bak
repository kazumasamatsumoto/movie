# #463「例外を投げる関数」

四国めたん「例外を投げる関数について学びましょう！」
ずんだもん「例外を投げる関数はnever型なの？」
四国めたん「はい、throw文だけの関数は never 型です。正常終了しませんね」
ずんだもん「どう書くの？」
四国めたん「function name(): never { throw ... } の形式です。必ず例外を投げますね」
ずんだもん「なるほど！エラー専用の関数なんだね！」
四国めたん「アサーション関数やエラーハンドラで使います。TypeScript v5.9でも頻繁に使われますね」
ずんだもん「型安全なエラー処理ができるんだね！」

---

## 📺 画面表示用コード

```typescript
// 例外を投げる関数
function throwError(message: string): never {
  throw new Error(message);
}
```

```typescript
// アサーション関数
function assert(condition: boolean, message: string): asserts condition {
  if (!condition) {
    throw new Error(message);
  }
}
```

```typescript
// 使用例
function divide(a: number, b: number): number {
  if (b === 0) {
    throwError("Division by zero");
  }
  return a / b;
}
```
