# #498「リスク」

四国めたん「無限ループのリスクについて学びましょう！」
ずんだもん「無限ループって危険じゃないの？」
四国めたん「はい、CPU を使い続けます。適切な待機やブロッキングが必要ですね」
ずんだもん「どうすればいいの？」
四国めたん「sleep() や await で CPU を解放します。リソース管理も重要ですね」
ずんだもん「なるほど！効率的に書くんだね！」
四国めたん「メモリリークやデッドロックにも注意します。TypeScript v5.9でも同じリスクですね」
ずんだもん「慎重に実装することが大事なんだね！」

---

## 📺 画面表示用コード

```typescript
// 悪い例: CPU を占有
function badLoop(): never {
  while (true) {
    // CPU 100%
  }
}
```

```typescript
// 良い例: 適切な待機
function goodLoop(): never {
  while (true) {
    doWork();
    sleep(100);  // CPU を解放
  }
}
```

```typescript
// 非同期での待機
async function asyncLoop(): never {
  while (true) {
    await processTask();
    await delay(1000);  // イベントループを解放
  }
}
```
