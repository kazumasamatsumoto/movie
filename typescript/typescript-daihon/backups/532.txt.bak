# #532 「型演算パターン」

四国めたん「never型を使った型演算パターンについて学びましょう！」
ずんだもん「よく使われるパターンを教えて！」
四国めたん「フィルタリング、マッピング、リデュース、パターンマッチングなどがありますね」
ずんだもん「それぞれどう実装するの？」
四国めたん「条件付き型とnever型を組み合わせることで、関数型プログラミングのパターンが実現できます」
ずんだもん「なるほど！型でも関数型の考え方が使えるんだね！」
四国めたん「型レベルでの変換パターンを習得すると、高度な型安全性が実現できますね」
ずんだもん「実践的なパターンを覚えて使いこなすよ！」

---

## 📺 画面表示用コード

```typescript
// フィルタリングパターン
type Filter<T, Condition> =
  T extends Condition ? T : never;

type Strings = Filter<'a' | 'b' | 1 | 2, string>;
// = 'a' | 'b'
```

```typescript
// マッピングパターン
type MapToArray<T> = {
  [K in keyof T]: T[K][]
};

type Arrays = MapToArray<{ name: string; age: number }>;
// = { name: string[]; age: number[] }
```

```typescript
// パターンマッチング
type Match<T> =
  T extends string ? 'String'
  : T extends number ? 'Number'
  : T extends boolean ? 'Boolean'
  : 'Unknown';

type A = Match<'hello'>;  // 'String'
type B = Match<42>;       // 'Number'
type C = Match<object>;   // 'Unknown'
```
