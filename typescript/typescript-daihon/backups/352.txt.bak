# #352「nullish型の宣言」

四国めたん「nullish型の宣言方法について学びましょう！」
ずんだもん「どうやって宣言するの？」
四国めたん「T | null | undefined のユニオン型で宣言します。型エイリアスで再利用も可能ですね」
ずんだもん「オプショナルとは違うの？」
四国めたん「はい、オプショナルは T | undefined だけです。nullish型は明示的にnullも含みますね」
ずんだもん「なるほど！より広い範囲を許容するんだね！」
四国めたん「外部データとのやり取りで特に重要です。strictNullChecksで型安全性が保証されますね」
ずんだもん「明示的に宣言できて最高だよ！」

---

## 📺 画面表示用コード

```typescript
// 基本的な宣言
let name: string | null | undefined;
let count: number | null | undefined;
let flag: boolean | null | undefined;
```

```typescript
// 型エイリアスでの再利用
type Nullish<T> = T | null | undefined;
let value: Nullish<string>;
let data: Nullish<number[]>;
```

```typescript
// インターフェースでの利用
interface ApiResponse {
  data: User | null | undefined;
  error: Error | null | undefined;
  timestamp: number;
}
```
