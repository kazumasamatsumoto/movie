# #397「インターフェースのメソッド」

四国めたん「インターフェースのメソッドでのvoid型について学びましょう！」
ずんだもん「インターフェースでvoidはどう定義するの？」
四国めたん「メソッドシグネチャで : void を指定します。実装クラスが従うべき契約を定義しますね」
ずんだもん「どんなメソッドで使うの？」
四国めたん「ライフサイクルメソッド、イベントハンドラ、コールバックなどです。戻り値が不要なメソッドですね」
ずんだもん「なるほど！インターフェースの設計なんだね！」
四国めたん「実装側も void で実装する必要があります。TypeScript v5.9でも型チェックが働きますね」
ずんだもん「型安全に設計できるんだね！」

---

## 📺 画面表示用コード

```typescript
// インターフェースでのvoid
interface Lifecycle {
  init(): void;
  destroy(): void;
}
```

```typescript
// 実装クラス
class Component implements Lifecycle {
  init(): void {
    console.log("Initialized");
  }

  destroy(): void {
    console.log("Destroyed");
  }
}
```

```typescript
// イベントハンドラのインターフェース
interface EventListener {
  handleClick(event: MouseEvent): void;
  handleKeyPress(event: KeyboardEvent): void;
}
```
