# #412「使い分け」

四国めたん「voidとundefinedの使い分けについて学びましょう！」
ずんだもん「どう使い分けるの？」
四国めたん「戻り値を使わない関数は void、値として扱う場合は undefined ですね」
ずんだもん「具体的には？」
四国めたん「副作用関数、イベントハンドラは void。検索結果、オプショナル値は undefined ですね」
ずんだもん「なるほど！目的で決まるんだね！」
四国めたん「設計の意図を型で表現することが重要です。TypeScript v5.9でも基本原則ですね」
ずんだもん「明確に使い分けるんだね！」

---

## 📺 画面表示用コード

```typescript
// void: 副作用のための関数
function saveData(data: Data): void {
  database.save(data);
  // 戻り値を使わない
}
```

```typescript
// undefined: 値を返す可能性
function loadData(id: number): Data | undefined {
  return database.find(id);
  // undefinedという値を返す可能性
}
```

```typescript
// 実践的な使い分け
interface UserService {
  getUser(id: number): User | undefined;  // 検索
  deleteUser(id: number): void;           // 削除
  saveUser(user: User): void;             // 保存
}
```
