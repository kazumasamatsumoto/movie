# #485「デバッグ」

四国めたん「never型関数のデバッグについて学びましょう！」
ずんだもん「never型の関数はどうデバッグするの？」
四国めたん「ブレークポイント、console.log、スタックトレースを使います」
ずんだもん「例外が投げられるのにデバッグできるの？」
四国めたん「はい、例外の前にログを出力できます。デバッガで停止もできますね」
ずんだもん「なるほど！通常の関数と同じなんだね！」
四国めたん「エラーメッセージも詳細に書きます。TypeScript v5.9でも同じ方法ですね」
ずんだもん「分かりやすいエラーが大事なんだね！」

---

## 📺 画面表示用コード

```typescript
// デバッグログ付きエラー関数
function fail(message: string, context?: unknown): never {
  console.error("Error context:", context);
  console.error("Stack trace:");
  console.trace();
  throw new Error(message);
}
```

```typescript
// 条件付きデバッグ
const DEBUG = true;

function assertNever(value: never): never {
  if (DEBUG) {
    console.error("Unexpected value:", value);
    console.error("Type:", typeof value);
  }
  throw new Error(`Unhandled case: ${value}`);
}
```

```typescript
// デバッガでの停止
function throwError(message: string): never {
  debugger;  // ここで停止
  throw new Error(message);
}
```
