# #384「Promise<void>」

四国めたん「Promise<void>について学びましょう！」
ずんだもん「Promise<void>ってどういう意味？」
四国めたん「非同期処理の完了だけを表現します。戻り値は期待しませんね」
ずんだもん「どんな時に使うの？」
四国めたん「データ保存、ログ送信、初期化処理など、完了の通知だけが必要な場合に使います」
ずんだもん「なるほど！処理の完了を待つだけなんだね！」
四国めたん「async関数でreturn文がない場合、自動的にPromise<void>になります。TypeScript v5.9でも頻繁に使われますね」
ずんだもん「非同期処理で便利だね！」

---

## 📺 画面表示用コード

```typescript
// Promise<void>の基本
async function saveData(data: Data): Promise<void> {
  await database.save(data);
  console.log("Saved");
}
```

```typescript
// 型推論でPromise<void>
async function initialize() {
  await loadConfig();
  await connectDB();
  // Promise<void>と推論される
}
```

```typescript
// 実用例
async function processAll(items: Item[]): Promise<void> {
  await Promise.all(items.map(item => saveItem(item)));
  console.log("All items processed");
}
```
