# #369「ベストプラクティス」

四国めたん「Non-null Assertionのベストプラクティスについて学びましょう！」
ずんだもん「どう使うのがベストなの？」
四国めたん「基本的には使わないことです。型ガード、Optional Chaining、Nullish Coalescingを優先しますね」
ずんだもん「どうしても使う時は？」
四国めたん「値の存在が確実で、型システムが推論できない場合のみです。コメントで理由を明記しますね」
ずんだもん「なるほど！最終手段なんだね！」
四国めたん「ESLintで警告を出し、コードレビューで確認します。TypeScript v5.9でも慎重な使用が推奨されますね」
ずんだもん「型安全性を最優先にするんだね！」

---

## 📺 画面表示用コード

```typescript
// ベストプラクティス1: 型ガードを優先
const element = document.getElementById("app");
if (element !== null) {
  element.innerHTML = "Hello";
}
```

```typescript
// ベストプラクティス2: Optional Chainingを活用
const name = user?.name ?? "Unknown";
const result = data?.process()?.value;
```

```typescript
// やむを得ず使う場合: コメントで理由を明記
// アプリ起動時に必ず存在することが保証されている
const rootElement = document.getElementById("root")!;
ReactDOM.render(<App />, rootElement);
```
