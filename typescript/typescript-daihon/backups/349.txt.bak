# #349「ベストプラクティス」

四国めたん「undefinedable型のベストプラクティスについて学びましょう！」
ずんだもん「どう使うのがベストなの？」
四国めたん「オプショナルプロパティには ? を使い、明示的undefinedableと使い分けます。デフォルト値も活用しますね」
ずんだもん「他に注意点はあるの？」
四国めたん「Non-Null Assertionは避け、Optional Chainingを使います。型ガードで安全に絞り込みますね」
ずんだもん「なるほど！安全性を優先するんだね！」
四国めたん「一貫性のあるコーディング規約が重要です。ESLintで強制することも推奨されますね」
ずんだもん「チーム全体で型安全にできて最高だよ！」

---

## 📺 画面表示用コード

```typescript
// ベストプラクティス1: オプショナルの活用
interface Config {
  host: string;
  port?: number;        // オプショナル
  timeout?: number;     // オプショナル
}
```

```typescript
// ベストプラクティス2: デフォルト値
function connect(config: Config) {
  const port = config.port ?? 8080;
  const timeout = config.timeout ?? 3000;
}
```

```typescript
// ベストプラクティス3: Optional Chaining
const result = data?.process()?.value ?? defaultValue;
```
