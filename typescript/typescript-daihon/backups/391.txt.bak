# #391「throw文」

四国めたん「void関数でのthrow文について学びましょう！」
ずんだもん「throw文ってvoid関数で使えるの？」
四国めたん「はい、throw文は戻り値型に影響しません。never型を返すため、void型と互換性がありますね」
ずんだもん「neverってなに？」
四国めたん「到達不可能なコードを表す型です。throw文は関数を終了するため、戻り値がありませんね」
ずんだもん「なるほど！例外は特別扱いなんだね！」
四国めたん「バリデーションやアサーションで頻繁に使います。TypeScript v5.9でも同じ動作ですね」
ずんだもん「エラー処理で便利だね！」

---

## 📺 画面表示用コード

```typescript
// throw文はvoid関数で使用可能
function assert(condition: boolean, message: string): void {
  if (!condition) {
    throw new Error(message);
  }
}
```

```typescript
// バリデーション関数
function validateAge(age: number): void {
  if (age < 0) throw new Error("Age cannot be negative");
  if (age > 150) throw new Error("Age is too large");
  console.log("Age is valid");
}
```

```typescript
// never型との関係
function throwError(message: string): never {
  throw new Error(message);
}
function process(): void {
  throwError("Error");  // OK: neverはvoidに代入可能
}
```
