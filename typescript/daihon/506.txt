# #506「if-else文の網羅性」

四国めたん「if-else文での網羅性チェックを学びましょう！」
ずんだもん「if-elseでも網羅性をチェックできるの？」
四国めたん「はい、else節でnever型チェックができます。switch文と同じパターンですね」
ずんだもん「どう書くの？」
四国めたん「すべての条件を処理した後、else節でassertNeverを呼びます。型エラーで網羅性を確認できますね」
ずんだもん「なるほど！if-elseでも安全なんだね！」
四国めたん「型ガードと組み合わせると強力です。TypeScript v5.9でも推奨されるパターンですね」
ずんだもん「柔軟に使えるんだね！」

---

## 📺 画面表示用コード

```typescript
// if-else文の網羅性
type Status = "pending" | "success" | "error";

function handleStatus(status: Status): string {
  if (status === "pending") {
    return "処理中";
  } else if (status === "success") {
    return "完了";
  } else if (status === "error") {
    return "エラー";
  } else {
    return assertNever(status);  // 網羅性チェック
  }
}
```

```typescript
// 型ガードとの組み合わせ
type Shape = Circle | Square;

function getArea(shape: Shape): number {
  if ("radius" in shape) {
    return Math.PI * shape.radius ** 2;
  } else if ("size" in shape) {
    return shape.size ** 2;
  } else {
    return assertNever(shape);
  }
}
```

```typescript
// 複数条件
type Event = ClickEvent | KeyEvent | MouseEvent;

function handle(event: Event): void {
  if (event.type === "click") {
    console.log("Click");
  } else if (event.type === "keypress") {
    console.log("Key");
  } else {
    assertNever(event);
  }
}
```
