# #531 「型レベルプログラミング」

四国めたん「never型を使った型レベルプログラミングについて学びましょう！」
ずんだもん「型レベルプログラミングってどういうこと？」
四国めたん「実行時ではなく、コンパイル時に型を使って計算を行うプログラミング手法です」
ずんだもん「never型はどう関係するの？」
四国めたん「never型は型レベルの条件分岐、フィルタリング、パターンマッチングの基礎になりますね」
ずんだもん「なるほど！型システムで計算ができるんだね！」
四国めたん「チューリング完全な型システムにより、複雑な型変換が可能ですね」
ずんだもん「実行時コストゼロで型安全性を実現できるよ！」

---

## 📺 画面表示用コード

```typescript
// 型レベルの条件分岐
type If<Cond extends boolean, True, False> =
  Cond extends true ? True : False;

type A = If<true, string, number>;   // string
type B = If<false, string, number>;  // number
```

```typescript
// 型レベルの再帰
type Reverse<T extends any[]> =
  T extends [infer First, ...infer Rest]
    ? [...Reverse<Rest>, First]
    : [];

type Result = Reverse<[1, 2, 3, 4]>;
// = [4, 3, 2, 1]
```

```typescript
// 型レベルの配列フィルタリング
type FilterNever<T extends any[]> =
  T extends [infer First, ...infer Rest]
    ? First extends never
      ? FilterNever<Rest>
      : [First, ...FilterNever<Rest>]
    : [];

type Clean = FilterNever<[string, never, number, never]>;
// = [string, number]
```
