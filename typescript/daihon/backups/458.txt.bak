# #458「ドキュメント」

四国めたん「void関数のドキュメントについて学びましょう！」
ずんだもん「void関数はどうドキュメント化するの？」
四国めたん「JSDocで副作用を明記します。何を変更するか、どう使うかを説明しますね」
ずんだもん「具体的にどう書くの？」
四国めたん「@param、@returns void、@throws を使います。副作用の説明が重要ですね」
ずんだもん「なるほど！意図を伝えるんだね！」
四国めたん「使用例も書くと良いです。TypeScript v5.9でも推奨されますね」
ずんだもん「分かりやすいドキュメントが大事なんだね！」

---

## 📺 画面表示用コード

```typescript
/**
 * ユーザーをデータベースに保存します
 * @param user 保存するユーザー
 * @returns void
 * @throws {ValidationError} ユーザーデータが無効な場合
 */
function saveUser(user: User): void {
  validateUser(user);
  database.save(user);
}
```

```typescript
/**
 * カウンターをインクリメントします
 * 副作用: グローバル変数 counter を +1 します
 * @returns void
 */
function increment(): void {
  counter++;
}
```

```typescript
/**
 * イベントリスナーを登録します
 * @param event イベント名
 * @param handler イベントハンドラ
 * @returns void
 * @example
 * addEventListener('click', () => console.log('Clicked'));
 */
function addEventListener(event: string, handler: () => void): void {
  listeners.push({ event, handler });
}
```
