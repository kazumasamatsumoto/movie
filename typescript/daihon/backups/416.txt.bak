# #416「Promise<void>とは」

四国めたん「Promise<void>について学びましょう！」
ずんだもん「Promise<void>ってどんな型なの？」
四国めたん「非同期処理の完了だけを表現する型です。戻り値は期待せず、完了を待つだけですね」
ずんだもん「どういう時に使うの？」
四国めたん「データ保存、初期化、クリーンアップなど、完了通知だけが必要な非同期処理で使います」
ずんだもん「なるほど！処理の完了を待つんだね！」
四国めたん「async関数でreturn文がない場合、自動的にPromise<void>になります。TypeScript v5.9でも頻繁に使われますね」
ずんだもん「非同期版のvoid型なんだね！」

---

## 📺 画面表示用コード

```typescript
// Promise<void>の基本
async function saveData(data: Data): Promise<void> {
  await database.save(data);
  console.log("Saved");
}
```

```typescript
// 型推論でPromise<void>
async function initialize() {
  await loadConfig();
  await connectDB();
  // Promise<void>と推論される
}
```

```typescript
// 使用例
async function main(): Promise<void> {
  await saveData({ id: 1, name: "Alice" });
  console.log("Complete");
}
```
