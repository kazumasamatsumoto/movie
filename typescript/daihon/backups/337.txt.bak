# #337「関数戻り値のnullable」

四国めたん「関数戻り値のnullable型について学びましょう！」
ずんだもん「戻り値がnullableってどう使うの？」
四国めたん「T | null を返すことで、結果が存在しない場合を表現できます。検索関数で頻繁に使いますね」
ずんだもん「どう処理すればいいの？」
四国めたん「呼び出し側でnullチェックが必要です。Optional ChainingやNullish Coalescingが便利ですね」
ずんだもん「なるほど！型で結果がないことを表現するんだね！」
四国めたん「undefinedとの使い分けも重要です。nullは明示的な「見つからない」を表しますね」
ずんだもん「型で意図を明確にできて最高だよ！」

---

## 📺 画面表示用コード

```typescript
// nullable戻り値
function findUser(id: number): User | null {
  const user = users.find(u => u.id === id);
  return user ?? null;
}
```

```typescript
// 呼び出し側の処理
const user = findUser(1);
if (user !== null) {
  console.log(user.name);
}
```

```typescript
// Nullish Coalescingで簡潔に
const user = findUser(1) ?? createGuestUser();
const name = findUser(1)?.name ?? "Unknown";
```
