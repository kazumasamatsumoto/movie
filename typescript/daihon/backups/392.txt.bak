# #392「コールバック関数」

四国めたん「void型のコールバック関数について学びましょう！」
ずんだもん「コールバック関数でvoidはどう使うの？」
四国めたん「戻り値を期待しないコールバックで () => void を使います。型定義で意図を明確にしますね」
ずんだもん「どんな場面で使うの？」
四国めたん「イベントハンドラ、非同期処理の完了通知、配列のforEachなどで使います」
ずんだもん「なるほど！処理だけが目的なんだね！」
四国めたん「戻り値を返しても無視されます。TypeScript v5.9でも標準的なパターンですね」
ずんだもん「コールバックの型定義が明確になるんだね！」

---

## 📺 画面表示用コード

```typescript
// コールバック関数の型定義
type Callback = (data: string) => void;
function processAsync(callback: Callback): void {
  setTimeout(() => callback("Done"), 1000);
}
```

```typescript
// 配列のforEach
const items = ["a", "b", "c"];
items.forEach((item: string): void => {
  console.log(item);
});
```

```typescript
// イベントリスナー
button.addEventListener("click", (e: Event): void => {
  console.log("Clicked");
});
```
