# #433「Callback<void>」

四国めたん「Callback<void>パターンについて学びましょう！」
ずんだもん「Callback<void>ってどう使うの？」
四国めたん「戻り値を期待しないコールバック関数の型です。イベントリスナーやハンドラで使いますね」
ずんだもん「具体的にどう定義するの？」
四国めたん「type Callback<T> = (data: T) => void の形式です。T に void を渡すこともできますね」
ずんだもん「なるほど！汎用的なパターンなんだね！」
四国めたん「React、Vue、Node.jsなど多くのフレームワークで使われます。TypeScript v5.9でも標準的ですね」
ずんだもん「実用的なパターンなんだね！」

---

## 📺 画面表示用コード

```typescript
// Callback型の定義
type Callback<T> = (data: T) => void;
type VoidCallback = Callback<void>;
const onComplete: VoidCallback = () => {
  console.log("Complete");
};
```

```typescript
// イベントハンドラ
type EventHandler<T = void> = (event: T) => void;
const clickHandler: EventHandler<MouseEvent> = (e) => {
  console.log(e.clientX);
};
```

```typescript
// 非同期コールバック
type AsyncCallback<T> = (data: T) => Promise<void>;
const saveCallback: AsyncCallback<User> = async (user) => {
  await database.save(user);
};
```
