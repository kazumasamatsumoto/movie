# #425「finally()」

四国めたん「Promise<void>のfinally()について学びましょう！」
ずんだもん「finally()ってどう使うの？」
四国めたん「成功・失敗に関わらず実行される処理を書きます。クリーンアップに便利ですね」
ずんだもん「どんな時に使うの？」
四国めたん「接続のクローズ、ロックの解放、ローディング表示の終了などで使います」
ずんだもん「なるほど！必ず実行したい処理なんだね！」
四国めたん「async/awaitでも finally ブロックが使えます。TypeScript v5.9でも同じですね」
ずんだもん「リソース管理に便利だね！」

---

## 📺 画面表示用コード

```typescript
// finally()メソッド
saveData(data)
  .then(() => console.log("Success"))
  .catch((error) => console.error(error))
  .finally(() => {
    console.log("Cleanup");
  });
```

```typescript
// async/awaitでのfinally
async function process(): Promise<void> {
  try {
    await saveData(data);
  } catch (error) {
    console.error(error);
  } finally {
    await cleanup();
  }
}
```

```typescript
// ローディング表示の例
async function loadData(): Promise<void> {
  showLoading();
  try {
    await fetchData();
  } finally {
    hideLoading();  // 必ず実行
  }
}
```
