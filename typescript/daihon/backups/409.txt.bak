# #409「互換性」

四国めたん「voidとundefinedの互換性について学びましょう！」
ずんだもん「voidとundefinedは互換性あるの？」
四国めたん「void型には undefined を代入できますが、逆は文脈によります。完全には互換ではありませんね」
ずんだもん「どういう時にエラーになるの？」
四国めたん「void戻り値の関数は値を返せませんが、undefinedは返せます。方向性があるんですね」
ずんだもん「なるほど！一方通行なんだね！」
四国めたん「コールバック関数では特殊な互換性があります。TypeScript v5.9でも注意が必要ですね」
ずんだもん「使い分けが重要なんだね！」

---

## 📺 画面表示用コード

```typescript
// voidにはundefinedを代入可能
let v: void = undefined;  // OK

// undefinedにはvoidを代入可能
let u: undefined = undefined;
let v2: void = u;  // OK
```

```typescript
// 関数の戻り値では違いがある
function returnsVoid(): void {
  return undefined;  // OK
}
function returnsUndefined(): undefined {
  return undefined;  // OK
}
```

```typescript
// 代入の互換性
const f1: () => void = (): undefined => undefined;  // OK
const f2: () => undefined = (): void => {};  // エラー (場合による)
```
