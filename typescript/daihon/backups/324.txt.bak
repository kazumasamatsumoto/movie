# #324「ベストプラクティス」

四国めたん「strictNullChecksのベストプラクティスについて学びましょう！」
ずんだもん「どう使うのがベストなの？」
四国めたん「常に有効にし、Non-Null Assertionは避けます。明示的な型定義と型ガードを使いましょう」
ずんだもん「他に注意点はあるの？」
四国めたん「nullよりundefinedを優先し、オプショナルプロパティを活用します。Nullish Coalescingも便利ですね」
ずんだもん「なるほど！一貫性が大事なんだね！」
四国めたん「チーム全体でコーディング規約を決めます。ESLintルールも設定しましょう」
ずんだもん「プロジェクト全体で型安全にできて最高だよ！」

---

## 📺 画面表示用コード

```typescript
// ベストプラクティス1: 明示的な型定義
function getUser(id: number): User | null {
  return users.find(u => u.id === id) ?? null;
}
```

```typescript
// ベストプラクティス2: 型ガード
if (user !== null) {
  console.log(user.name); // 安全
}
```

```typescript
// ベストプラクティス3: Nullish Coalescing
const name = user?.name ?? "Guest";
const port = config.port ?? 3000;
```
