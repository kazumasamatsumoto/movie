# #534 「型推論の関係」

四国めたん「never型と型推論の関係について学びましょう！」
ずんだもん「型推論でnever型はどう扱われるの？」
四国めたん「TypeScriptは制御フロー分析により、到達不可能なコードでnever型を推論します」
ずんだもん「具体的にどういうこと？」
四国めたん「すべての型を除外した結果、残りがない場合にnever型が自動的に推論されますね」
ずんだもん「なるほど！コンパイラが自動で判断してくれるんだね！」
四国めたん「型ガードと組み合わせることで、高精度な型推論が実現できますね」
ずんだもん「型推論とnever型の組み合わせが強力だよ！」

---

## 📺 画面表示用コード

```typescript
// 制御フロー分析による推論
function process(value: string | number) {
  if (typeof value === 'string') {
    return value.toUpperCase();
  } else if (typeof value === 'number') {
    return value * 2;
  }
  // ここでvalueはnever型と推論される
  const check: never = value;
}
```

```typescript
// 型ガードでの推論
type Shape = { kind: 'circle' } | { kind: 'square' };

function handle(shape: Shape) {
  if (shape.kind === 'circle') {
    // shape: { kind: 'circle' }
  } else {
    // shape: { kind: 'square' }
  }
  // すべて処理済みのため到達不可能
}
```

```typescript
// 条件付き型での推論
type InferReturnType<T> =
  T extends (...args: any[]) => infer R ? R : never;

type A = InferReturnType<() => string>;  // string
type B = InferReturnType<string>;        // never
```
