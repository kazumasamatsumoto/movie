# #380「設計思想」

四国めたん「void型の設計思想について学びましょう！」
ずんだもん「void型ってなぜ必要なの？」
四国めたん「関数型プログラミングの影響です。副作用と純粋関数を区別するためですね」
ずんだもん「どういうこと？」
四国めたん「値を返す関数と、処理だけを行う関数を型で明確に区別します。設計の意図を表現できますね」
ずんだもん「なるほど！関数の役割を型で示すんだね！」
四国めたん「JavaやC言語のvoidと同じ概念です。TypeScript v5.9でも重要な設計原則ですね」
ずんだもん「型システムで設計を表現できるんだね！」

---

## 📺 画面表示用コード

```typescript
// 純粋関数: 値を返す
function add(a: number, b: number): number {
  return a + b;
}
```

```typescript
// 副作用関数: void
function logResult(result: number): void {
  console.log(`Result: ${result}`);
}
```

```typescript
// 設計の明確化
interface DataService {
  getData(): Data;        // 値を取得
  saveData(data: Data): void;  // 副作用のみ
  deleteData(id: number): void;  // 副作用のみ
}
```
