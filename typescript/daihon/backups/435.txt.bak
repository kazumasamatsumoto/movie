# #435「Mapped Types」

四国めたん「Mapped Typesとvoidについて学びましょう！」
ずんだもん「Mapped Typesでvoidはどう使うの？」
四国めたん「オブジェクトのすべてのメソッドを void 型にするなど、型を変換できます」
ずんだもん「どう書くの？」
四国めたん「[K in keyof T]: void の形式で、すべてのプロパティを void にできますね」
ずんだもん「なるほど！一括で変換できるんだね！」
四国めたん「イベントハンドラの型定義やモックオブジェクトで使われます。TypeScript v5.9でも有用なパターンですね」
ずんだもん「型変換が便利だね！」

---

## 📺 画面表示用コード

```typescript
// すべてのメソッドをvoidにする
type VoidMethods<T> = {
  [K in keyof T]: T[K] extends (...args: any[]) => any
    ? (...args: Parameters<T[K]>) => void
    : T[K];
};
```

```typescript
// 実用例
interface Service {
  getData(): Promise<Data>;
  saveData(data: Data): Promise<void>;
}
type MockService = VoidMethods<Service>;
```

```typescript
// プロパティを関数に変換
type ToHandlers<T> = {
  [K in keyof T]: (value: T[K]) => void;
};
type UserHandlers = ToHandlers<User>;
```
