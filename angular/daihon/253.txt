# #253 「Smart/Dumb パターンの実践」台本

ずんだもん「Smart/Dumbパターンを実際にどう使えばいいの?」
四国めたん「Smartがデータ取得と状態管理、Dumbが表示を担当する明確な分離が重要です」
ずんだもん「具体的な設計手順を教えて!」
四国めたん「まずDumbで表示を作り、次にSmartでロジックを実装する順序が効果的です」
ずんだもん「この分離のメリットは何?」
四国めたん「テスタビリティ向上、再利用性の確保、保守性の改善が実現できます」
ずんだもん「役割分離で開発効率が上がるんだね!」
